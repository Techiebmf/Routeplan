{"ast":null,"code":"import _objectSpread from \"/home/yatinndra/Documents/my-route/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/yatinndra/Documents/my-route/src/components/MapBox/index.js\";\nimport React from 'react';\nimport { compose, withProps, lifecycle } from 'recompose';\nimport { withScriptjs, withGoogleMap, GoogleMap, DirectionsRenderer } from 'react-google-maps';\n\nclass MyMapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const DirectionsComponent = compose(withProps({\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"400px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"600px\",\n          width: \"600px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      })\n    }), withScriptjs, withGoogleMap, lifecycle({\n      componentDidMount() {\n        const DirectionsService = new google.maps.DirectionsService();\n        DirectionsService.route({\n          origin: new google.maps.LatLng(41.8507300, -87.6512600),\n          destination: new google.maps.LatLng(41.8525800, -87.6514100),\n          travelMode: google.maps.TravelMode.DRIVING\n        }, (result, status) => {\n          if (status === google.maps.DirectionsStatus.OK) {\n            this.setState({\n              directions: _objectSpread({}, result),\n              markers: true\n            });\n          } else {\n            console.error(\"error fetching directions \".concat(result));\n          }\n        });\n      }\n\n    }))(props => React.createElement(GoogleMap, {\n      defaultZoom: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, props.directions && React.createElement(DirectionsRenderer, {\n      directions: props.directions,\n      suppressMarkers: props.markers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n    return React.createElement(DirectionsComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default MyMapComponent;","map":{"version":3,"sources":["/home/yatinndra/Documents/my-route/src/components/MapBox/index.js"],"names":["React","compose","withProps","lifecycle","withScriptjs","withGoogleMap","GoogleMap","DirectionsRenderer","MyMapComponent","Component","constructor","props","render","DirectionsComponent","googleMapURL","loadingElement","height","containerElement","width","mapElement","componentDidMount","DirectionsService","google","maps","route","origin","LatLng","destination","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","directions","markers","console","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,OAAV,EAAmBC,SAAnB,EAA8BC,SAA9B,QAA+C,WAA/C;AACA,SAAQC,YAAR,EAAsBC,aAAtB,EAAqCC,SAArC,EAAgDC,kBAAhD,QAAyE,mBAAzE;;AACA,MAAMC,cAAN,SAA6BR,KAAK,CAACS,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AACHC,EAAAA,MAAM,GAAG;AACL,UAAMC,mBAAmB,GAAGZ,OAAO,CACjCC,SAAS,CAAC;AACRY,MAAAA,YAAY,EAAE,0CADN;AAERC,MAAAA,cAAc,EAAE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM;AAAR,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAGRC,MAAAA,gBAAgB,EAAE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK;AAAP,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHV;AAIRC,MAAAA,UAAU,EAAE;AAAK,QAAA,KAAK,EAAE;AAACH,UAAAA,MAAM,SAAP;AAAkBE,UAAAA,KAAK;AAAvB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,KAAD,CADwB,EAOjCd,YAPiC,EAQjCC,aARiC,EASjCF,SAAS,CAAC;AACRiB,MAAAA,iBAAiB,GAAG;AAClB,cAAMC,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYF,iBAAhB,EAA1B;AACAA,QAAAA,iBAAiB,CAACG,KAAlB,CAAwB;AACtBC,UAAAA,MAAM,EAAE,IAAIH,MAAM,CAACC,IAAP,CAAYG,MAAhB,CAAuB,UAAvB,EAAmC,CAAC,UAApC,CADc;AAEtBC,UAAAA,WAAW,EAAE,IAAIL,MAAM,CAACC,IAAP,CAAYG,MAAhB,CAAuB,UAAvB,EAAmC,CAAC,UAApC,CAFS;AAGtBE,UAAAA,UAAU,EAAEN,MAAM,CAACC,IAAP,CAAYM,UAAZ,CAAuBC;AAHb,SAAxB,EAIG,CAACC,MAAD,EAASC,MAAT,KAAoB;AACrB,cAAIA,MAAM,KAAKV,MAAM,CAACC,IAAP,CAAYU,gBAAZ,CAA6BC,EAA5C,EAAgD;AAC5D,iBAAKC,QAAL,CAAc;AACEC,cAAAA,UAAU,oBAAML,MAAN,CADZ;AAEEM,cAAAA,OAAO,EAAE;AAFX,aAAd;AAIa,WALD,MAKO;AACLC,YAAAA,OAAO,CAACC,KAAR,qCAA2CR,MAA3C;AACD;AACF,SAbD;AAcD;;AAjBO,KAAD,CATwB,CAAP,CA4B1BpB,KAAK,IACL,oBAAC,SAAD;AACE,MAAA,WAAW,EAAE,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGA,KAAK,CAACyB,UAAN,IAAoB,oBAAC,kBAAD;AAAoB,MAAA,UAAU,EAAEzB,KAAK,CAACyB,UAAtC;AAAkD,MAAA,eAAe,EAAEzB,KAAK,CAAC0B,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHvB,CA7B0B,CAA5B;AAmCJ,WACQ,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAIG;;AA5C0C;;AA8C7C,eAAe7B,cAAf","sourcesContent":["import React from 'react'\nimport  { compose, withProps, lifecycle } from 'recompose'\nimport {withScriptjs, withGoogleMap, GoogleMap, DirectionsRenderer} from 'react-google-maps'\nclass MyMapComponent extends React.Component {\n  constructor(props){\n    super(props)\n  }\nrender() {\n    const DirectionsComponent = compose(\n      withProps({\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?\",\n        loadingElement: <div style={{ height: `400px` }} />,\n        containerElement: <div style={{ width: `100%` }} />,\n        mapElement: <div style={{height: `600px`, width: `600px` }}  />,\n      }),\n      withScriptjs,\n      withGoogleMap,\n      lifecycle({\n        componentDidMount() { \n          const DirectionsService = new google.maps.DirectionsService();\n          DirectionsService.route({\n            origin: new google.maps.LatLng(41.8507300, -87.6512600),\n            destination: new google.maps.LatLng(41.8525800, -87.6514100),\n            travelMode: google.maps.TravelMode.DRIVING,\n          }, (result, status) => {\n            if (status === google.maps.DirectionsStatus.OK) {\nthis.setState({\n                directions: {...result},\n                markers: true\n              })\n            } else {\n              console.error(`error fetching directions ${result}`);\n            }\n          });\n        }\n      })\n    )(props =>\n      <GoogleMap\n        defaultZoom={3}\n      >\n        {props.directions && <DirectionsRenderer directions={props.directions} suppressMarkers={props.markers}/>}\n      </GoogleMap>\n    );\nreturn (\n        <DirectionsComponent\n        />\n    )\n  }\n}\nexport default MyMapComponent"]},"metadata":{},"sourceType":"module"}